% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/ShiftInTime.R
\name{ShiftInTime}
\alias{ShiftInTime}
\title{ShiftInTime}
\usage{
ShiftInTime(.X, .rate = 1, .shift = 0, .smooth = 0)
}
\arguments{
\item{.X}{A numeric vector, usually representing a measurement history.}

\item{.rate}{The assumed sampling rate in Hz (default 1 Hz).}

\item{.shift}{The shift to be applied, in milliseconds. Can be positive
or negative.}

\item{.smooth}{The smoothing interval in milliseconds.
Controls smoothing of the time series after interpolation
to high rate but before discrete points are selected from that series to
represent the shifted series. .smooth may be either zero
or a positive odd integer. Default is 0, in which case no smoothing
is performed. This is also the case for smoothing intervals less than
40 ms (or five samples at 125-Hz). If .smooth is larger than 40,
smoothing is performed using 3rd-order Savitzky-Golay polynomials
spanning that interval.}
}
\value{
The same series after shifting in time, possibly by fractions
of the sampling period.
}
\description{
Shift a time-series vector forward or backward.
}
\details{
For a vector assumed to be a time series with sampling
rate .rate, shift by .shift milliseconds. Fractional shifts are
handled by interpolating to a 125-Hz sequence, then picking values
from that interpolated sequence after shifting. The shift adds
duplicate values at one end and removes values from the other
end. The .smooth logical variable gives some optional smoothing
of the interpolated series before subsetting to the original
rate. The result is the shifted time series.
}
\examples{
newVariable <- ShiftInTime (1:50, .rate=1, .shift=-500)
}
\author{
William Cooper
}

