% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getNetCDF.R
\name{getNetCDF}
\alias{getNetCDF}
\alias{getnetcdf}
\alias{GetNetCDF}
\title{getNetCDF}
\usage{
getNetCDF(
  fname = setFileName(),
  VarList = standardVariables(),
  Start = 0,
  End = 0,
  F = 0
)
}
\arguments{
\item{fname}{string, full-path file name, e.g., "/scr/raf_data/PREDICT/PREDICTrf01.nc".
Also accepted are an OPENDAP URL. If used interactively, the default is to call the
function "setFileName()" to select the data file. When not interactive, the default
produces an error so "fname" must be supplied.}

\item{VarList}{vector of variable names to load from the netCDF file. Use "ALL" to load 
everything except vector variables like the size distributions. (This option may produce 
quite large data.frames.) The default is the list given by standardVariables (). 
SPECIAL NOTE: Some variable names
have a suffix indicating the location on the aircraft, like _LWI (left-wing inboard).
To avoid having to supply these, a partial name can be supplied, like "CONCD_", and
the routine will find the first matching variable and use that variable name. These
can always be overridden by providing the full name; this is just a convenience to
avoid having to look up where a particular measurement was installed in a given project.}

\item{Start}{An optional numeric giving the desired start time in HHMMSS format}

\item{End}{An optional numeric giving the desired end time in HHMMSS format}

\item{F}{An optional numeric entered in the data.frame as a column 'RF' all set to 
this integer. This may be useful when the resulting data.frame is combined with others, 
to have a variable distinguishing different flights.}
}
\value{
data.frame containing the specified variables as columns, along with 'Time' 
and optionally the flight number 'RF'. The netCDF-file attributes and variable
attributes are assigned to the data.frame and columns, respectively.
}
\description{
Loads selected variables in a specified netCDF data file into a data.frame.
}
\details{
'Time' is converted to a POSIXct variable, and other variables specified in 
VarList are included in the data.frame. By default, the entire file is loaded, but 
optional arguments Start and End can limit the time range. After reading the data, the 
netCDF file is closed before returning the data.frame to the calling program.
The global attributes in the netCDF file are loaded as attributes of the returned 
data.frame, and attributes of each requested variable are also assigned to that column 
in the data.frame from the variable attributes in the netCDF file. A 'label' attribute
is added where possible, constructed from the 'standard_name' and 'units' attributes,
and the label also contains the variable name. Some translations are applied to the
conventional standard_names and units; see "transl" below.
When working with attributes, it is a feature of R data.frames that subsetting loses 
all the assigned variable attributes. To preserve them, copy them via 
A <- attributes (Data$VAR), remove A$dim (e.g., A$dim <- NULL),
and re-assign via attributes (DataNew$VAR) <- A. The function does handle some
multi-dimensional variables (e.g., CCDP, CFSSP, the size distributions measured by the CDP
and FSSP); these are returned as data.frame variables that are columns in the returned
more general data.frame. They are two-dimensional, with the first dimension matching the
rows in the returned data.frame and the second having a length equal to the measured size
distribution (e.g., 30 for the CDP, 15 for the FSSP). The values are the number concentration
in each bin, and the variable is assigned an attribute "BinSize" that contains the mid-points
of the bins in the size distribution. The returned values are concentrations per bin (units
/cm^3) and, for BinSize, diameter in micrometers. The returned size distribution does not 
include the legacy first bin in the netCDF files; the first bin is the first measurement. 
The routine does work for 25-Hz files, for which it returns with fractional-second times.
}
\examples{
\dontrun{D <- getNetCDF ("PathToFile.nc", c("Var1", "Var2", "Var3"))}
\dontrun{D <- getNetCDF ("PathToFile.nc", c("Var1", "Var2"), 133000, 143000, 5)}
}
\author{
William Cooper
}
